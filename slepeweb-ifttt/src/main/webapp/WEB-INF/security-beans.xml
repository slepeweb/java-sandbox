<beans:beans 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
 <!--
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/account/delete" access="hasRole('MONEY_ADMIN')" />
		<intercept-url pattern="/payee/delete" access="hasRole('MONEY_ADMIN')" />
		<intercept-url pattern="/category/delete" access="hasRole('MONEY_ADMIN')" />
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/**" access="hasRole('MONEY_USER')" />
		
		<form-login 
		  login-page="/login" 
		  default-target-url="/" 
			authentication-failure-url="/login?error" 
			username-parameter="alias"
			password-parameter="password" />
			
		<logout 
			logout-success-url="/login?logout"
			logout-url="/j_spring_security_logout" />	
		
	</http>
 
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />
	
	<authentication-manager>
	  <authentication-provider>
			<password-encoder ref="passwordEncoder" />	    
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query=
			    "select alias, password, enabled from user where alias=?"
			  authorities-by-username-query=
			    "select u.alias, r.name from user u, role r, userrole ur where u.alias = ? and u.id = ur.userid and r.id = ur.roleid" />
	  </authentication-provider>
	</authentication-manager>
	-->
 
</beans:beans>