<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
    http://www.springframework.org/schema/cache 
    http://www.springframework.org/schema/cache/spring-cache.xsd" 
    default-autowire="byName">

	<mvc:annotation-driven>
	    <mvc:argument-resolvers>
			<bean class="com.jaguar.jdxwww.mvc_support.annotation.RequestAttributeArgumentResolver"/>
			<bean class="com.jaguar.jdxwww.sdl.mvc.annotation.AcmObjectArgumentResolver"/>
    	</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<!-- Configures Handler Interceptors -->
	<mvc:interceptors>
		<bean class="com.jaguar.jdxwww.sdl.mvc.AcmInterceptor" />
		<bean class="com.jaguar.jdxwww.mvc.CommonInterceptor" />
	</mvc:interceptors>
	
	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass">
			<value>
				org.springframework.web.servlet.view.tiles2.TilesView
            </value>
		</property>
		<property name="requestContextAttribute"><value>rc</value></property>
		<property name="order"><value>0</value></property>
	</bean>
	
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>

	<!-- 
		This will serve JSP's from /WEB-INF/templates
	 -->
    <bean id="legacyViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/templates/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property> 
        <property name="order">
        	<value>1</value>
        </property>
    </bean>
    
	<!--  These SDL classes are safe to use in Dummy Mode but not required by Dummy Mode -->
	<bean id="springApplicationContext" class="com.jaguar.jdxwww.sdl.util.SpringApplicationContext" />
	<bean id="webApp" class="com.jdxwww.sdl.mvc.bean.WebAppBean" />
	<bean id="cacheBean" class="com.jdxwww.sdl.mvc.bean.CacheBean" init-method="initialiseCache" depends-on="acmNavCache" />
	
	<!-- These classes are required by both dummy mode and ACM mode -->
	<bean id="messageSource" class="com.jaguar.jdxwww.sdl.mvc.AcmMessageSource" >
		<property name="useCodeAsDefaultMessage" value="false" />	
	</bean>
	
	<bean id="eventListenerBean" class="com.jaguar.jdxwww.sdl.mvc.JdxContextListener" />
	
	<bean id="localeResolver" class="com.jaguar.jdxwww.sdl.mvc.LocaleResolver">
		<property name="defaultLocale" value="en_GB" />
	</bean>
	
	<bean id="applicationProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:properties/application${JDX_SERVER_ID}.properties</value>
				<value>classpath:properties/environment.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true"/>
	</bean>

	<!--  Allow us to grab servletcontext params in @Value attributes -->
	<bean class="com.jaguar.jdxwww.mvc.ApplicationProperties">
		<property name="properties" ref="applicationProperties" />
	</bean>
	
	<!--  TO RUN IN DUMMY MODE,
	      UNCOMMENT THE component-scan BELOW.
	      COMMENT OUT ALL THE ACM DEFINITIONS, FROM THE ACM component-scan TO THE END OF THIS FILE
	      
	      IN environment.properties set,
	      
	      mvc.useAcm=false
	      ACMConnectionBean.connectionString=localhost:2170/
	      
	      That last property will cause Morello to fail to connect to ACM which is what we want to happen -->
	
	<!--  UNCOMMENT BELOW TO USE DUMMY SERVICE IMPL 
	<context:component-scan
		base-package="com.jaguar.jdxwww.mvc, com.jaguar.jdxwww.dummy.service.impl, com.jaguar.jdxwww.gws4, com.jaguar.jdxwww.sdl.mvc" /> 
-->
	
	<!--  START OF ACM ONLY BEAN DEFINITIONS! -->
	<!--  IF RUNNING IN DUMMY MODE YOU CAN COMMENT OUT EVERYTHING AFTER THIS POINT -->
	<!--  UNCOMMENT EVERYTHING THAT FOLLOWS TO USE SDL SERVICE IMPL -->
<!-- -->
 	<!--  	<context:component-scan -->
<!-- 		base-package="com.jaguar.jdxwww.mvc, com.jaguar.jdxwww.mvc.controller, com.jaguar.jdxwww.gws4, com.jaguar.jdxwww.mvc.service, com.jaguar.jdxwww.sdl.helper.service, com.jaguar.jdxwww.sdl.mvc, com.jaguar.jdxwww.sdl.service.impl" /> -->
	<context:component-scan	base-package="com.jaguar.jdxwww.mvc, com.jaguar.jdxwww.sdl" />
		

	<bean id="acmConnection" class="com.jdxwww.sdl.mvc.bean.ACMConnectionBean" init-method="initialiseConnection" />
	

	<bean id="sitePropsBuilderJob" class="org.springframework.scheduling.quartz.JobDetailBean" >
        <property name="jobClass" value="com.jaguar.jdxwww.sdl.mvc.jobs.AcmSitePropertiesJob" />
        <property name="jobDataAsMap">
            <map>
                <entry key="webApp" value-ref="webApp" />
                <entry key="acmConn" value-ref="acmConnection" />
                <entry key="sitePropertiesBean" value-ref="sitePropertiesManager" />
            </map>
        </property>
    </bean>

    
    <bean id="sitePropsBuildTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail" ref="sitePropsBuilderJob" />
        <property name="startDelay" value="5000" />
        <!--  10 mins -->
        <property name="repeatInterval" value="600000" />
    </bean>
    
    
    <bean id="resourceBundlesJob" class="org.springframework.scheduling.quartz.JobDetailBean" >
        <property name="jobClass" value="com.jaguar.jdxwww.sdl.mvc.jobs.AcmResourceBundlesJob" />
        <property name="jobDataAsMap">
            <map>
                <entry key="webApp" value-ref="webApp" />
                <entry key="acmConn" value-ref="acmConnection" />
                <entry key="resourceBundleBean" value-ref="resourceBundleManager" />
            </map>
        </property>
    </bean>
    <bean id="resourceBundlesTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail" ref="resourceBundlesJob" />
        <property name="startDelay" value="5000" />
        <!--  10 mins -->
        <property name="repeatInterval" value="600000" />
    </bean>
    
    
    <bean id="newsAndEventsJob" class="org.springframework.scheduling.quartz.JobDetailBean" >
        <property name="jobClass" value="com.jaguar.jdxwww.sdl.mvc.jobs.AcmNewsAndEventsJob" />
        <property name="jobDataAsMap">
            <map>
                <entry key="webApp" value-ref="webApp" />
                <entry key="acmConn" value-ref="acmConnection" />
                <entry key="newsAndEventsManager" value-ref="newsAndEventsManager" />
            </map>
        </property>
    </bean>

    
    <bean id="newsAndEventsTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail" ref="newsAndEventsJob" />
        <property name="startDelay" value="30000" />
		<!--  1 hr -->
        <property name="repeatInterval" value="3600000" /> 
    </bean>
    	
    
    <bean id="schedulerFactoryBean"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="sitePropsBuilderJob" />
				<ref bean="resourceBundlesJob" />
 				<ref bean="newsAndEventsJob" />
            </list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="sitePropsBuildTrigger" />
				<ref bean="resourceBundlesTrigger" />
 				<ref bean="newsAndEventsTrigger" />
            </list>
		</property>
	</bean>

	<cache:annotation-driven />
 	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="compCache"/>
	<bean id="compCache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:compcache.xml"/>

</beans>