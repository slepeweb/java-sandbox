<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:flow="http://www.springframework.org/schema/webflow-config"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    	http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.1.xsd
    	http://www.springframework.org/schema/mvc 
    	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
    	http://www.springframework.org/schema/cache 
    	http://www.springframework.org/schema/cache/spring-cache.xsd 
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/webflow-config
			http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd"
			
    default-autowire="byName">

	<mvc:annotation-driven />	
	<context:component-scan	base-package="com.slepeweb.sandbox" />
		
	<!-- Tiles -->
	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass">
			<value>
				org.springframework.web.servlet.view.tiles2.TilesView
            </value>
		</property>
		<property name="requestContextAttribute"><value>rc</value></property>
		<property name="order"><value>0</value></property>
	</bean>
	
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
    			
  <!-- Ehcache -->
	<cache:annotation-driven />
 	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="compCache"/>
	<bean id="compCache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:compcache.xml"/>

	<!-- Hibernate -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/jdbc.properties">
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" 
		p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}" 
		p:username="${jdbc.username}" 
		p:password="${jdbc.password}">
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
		<property name="configurationClass">
			<value>org.hibernate.cfg.AnnotationConfiguration</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

  <!-- Something to do with auto-converting all low-level runtime exceptions to Spring ones -->
  <!-- <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/> -->

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- Webflow functionality -->
	
	<!-- 
		The flowhandler mapping identifies URLs for flows, and 
		tells the DispatcherServlet to ignores those URLs.
		For example, a flow with id 'spizza' ia mapped to URL '/spizza'.
	-->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="flowRegistry" ref="flowRegistry" />
	</bean>
	
	<!-- The registry loads flow definitions -->
	<flow:flow-registry id="flowRegistry" flow-builder-services="flowBuilderServices">
		<flow:flow-location id="sandbox/spizza" path="/WEB-INF/flows/spizza/spizza-flow.xml" />
		<flow:flow-location id="sandbox/spizza/customer" path="/WEB-INF/flows/spizza/identify-customer-flow.xml" />
		<flow:flow-location id="sandbox/spizza/order" path="/WEB-INF/flows/spizza/order-flow.xml" />
		<flow:flow-location id="sandbox/spizza/payment" path="/WEB-INF/flows/spizza/payment-flow.xml" />
	</flow:flow-registry>
	
	<!-- The flow executor is responsible for managing flows -->
	<flow:flow-executor id="flowExecutor" flow-registry="flowRegistry" />
	
	<!-- The flow handler adapter is effectively a controller for flow requests -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor" />
	</bean>
	
	<flow:flow-builder-services id="flowBuilderServices" view-factory-creator="mvcViewFactoryCreator" />
	
	<bean id="mvcViewFactoryCreator" class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator">
	    <property name="viewResolvers" ref="tilesViewResolver" />
	</bean>
	
</beans>